#!/usr/bin/env fish

set org_build 0
set build 0
set push 0

set script_name "[make_blog]"

function print_desc
    printf "usage :\n"
    printf "\tmake_blog [ org | build | push ]\n\n"
    printf "options descriptions:\n"
    printf "\torg : compiles org files to md files\n"
    printf "\tbuild : builds the blog using poole and copies the file to the blog directory\n"
    printf "\tpush : push blog sources and compiled files to github\n"
end


for option in $argv
    switch $option
        case org
            set org_build 1
        case build
            set build 1
        case push
            set push 1
    end
end

if [ (math $org_build + $build + $push) -eq 0 ]
    print_desc
    exit 0
end

echo org_build $org_build
echo build $build
echo push $push

if [ $org_build = 1 ]

    echo $script_name"compiling org files to markdown"
    
    cd input/achem
    
    for f in (ls | grep '.org$')
        emacs $f  --load ~/.emacs.d/init.el --batch -f org-md-export-to-markdown
        echo  "exported " + $f + " as markdown"
    end

    cd ../..
end


if [ $build = 1 ]

    echo $script_name"building website using poole"
    
    python2 poole.py --build --base-url ""


end

if [ $push = 1 ]
    
    echo $script_name"push website source files"
    echo 
    git add -u
    git commit -m "webiste source"
    git push
end

cd ..

if [ $build = 1 ]
    
    echo $script_name"copying files to export folder"
    cp -rv ./blog_src/output/* ./sapristi.github.io/
end

cd sapristi.github.io

if [ $push = 1 ]
    
    echo $script_name"push website export files"
    git add -u
    find . -name '*.html' | xargs git add
    git commit -m "webiste"
    git push
end
